<?xml version="1.0" encoding="UTF-8"?>
<launch>

<env name="GAZEBO_MODEL_PATH" value="$(find path_planning)/models/" />

<arg name="use_gui" default="true"/>
<arg name="world_name" default="$(find path_planning)/worlds/restaurant_world.world"/>

<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg use_gui)"/>
    <arg name="headless" value="true"/>
    <arg name="debug" value="false"/>
</include>

<arg name="x_pos" default="3.0"/>
<arg name="y_pos" default="4.0"/>
<arg name="z_pos" default="0.0"/>
<arg name="yaw" default="0.0"/>

<arg name="base" value="kobuki"/>
<arg name="stacks" value="hexagons"/>
<arg name="3d_sensor" value="kinect"/> 

<arg name="urdf_file" default="$(find xacro)/xacro '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
<param name="robot_description" command="$(arg urdf_file)" />

<arg name= "robot_name" default= "robot"/>

<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
  args="-param robot_description
  -urdf
  -x $(arg x_pos)
  -y $(arg y_pos)
  -z $(arg z_pos)
  -Y $(arg yaw)
  -model $(arg robot_name)"
  respawn="false" output="screen"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <arg name="static_tf" default="true" />
  <node if="$(arg static_tf)" pkg="tf2_ros" type="static_transform_publisher" name="odom_wrt_map_tf" args="0 0 0 0 0 0 map odom" />

</launch>
