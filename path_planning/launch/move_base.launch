<?xml version="1.0"?>

<launch>
  <!-- Specify the name of the sensor data and command topics (can be overridden on the command line) -->
  <!-- If no laser data is provided the local and global planer will be unable to perform dynamic obstacle avoidance -->
  <arg name="scan_topic" default="/scan"/>
  <arg name="cmd_vel_topic" default="/cmd_vel"/>
  <arg name="odom_topic" default="/odom"/>
 
  <arg name="base_global_planner" default="pp_plugin/PPPlugin"/> 
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find path_planning)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find path_planning)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find path_planning)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find path_planning)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find path_planning)/config/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find path_planning)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find path_planning)/config/global_planner_params.yaml" command="load" />
    <rosparam file="$(find path_planning)/config/navfn_global_planner_params.yaml" command="load" />


    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg scan_topic)"/>
    
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>      
  </node>
  
</launch>
